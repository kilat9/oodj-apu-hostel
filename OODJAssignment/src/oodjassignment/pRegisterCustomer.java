/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oodjassignment;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class pRegisterCustomer extends javax.swing.JFrame {

    /**
     * Creates new form pRegisterCustomer
     */
    public pRegisterCustomer() {
        initComponents();
        AutoCustomerID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblUserID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Register Customer");

        txtID.setEditable(false);

        lblUserID.setText("User ID");

        lblName.setText("Name");

        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });

        lblEmail.setText("Email");

        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });

        lblAddress.setText("Address");

        txtAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAddressFocusLost(evt);
            }
        });

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lblUserID)
                                            .addGap(82, 82, 82))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblName)
                                            .addGap(73, 73, 73)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblEmail)
                                        .addGap(83, 83, 83)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAddress)
                                .addGap(82, 82, 82)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnRegister)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserID))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddress))
                .addGap(86, 86, 86)
                .addComponent(btnRegister)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String userID, name, email, role, accountCreationDate, address;
    int customerLoyaltyPoints;
    boolean IsEmpty;
    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
   
        try{

            //Overide the existing file

            Calendar currentDate = Calendar.getInstance();
            SimpleDateFormat datef = new SimpleDateFormat("dd/MM/yyyy");
        
        
            userID = txtID.getText();
            name = txtName.getText();
            email = txtEmail.getText();
            role = "customer";
            accountCreationDate = datef.format(currentDate.getTime());
            customerLoyaltyPoints = 0;
            address = txtAddress.getText();
           
            
            IsEmpty = true;
            CheckEmpty();

            if (IsEmpty == false){

                // Write the name to the file.
                centerManager ct = new centerManager();
                ct.registerCustomer(userID, name, email , role , accountCreationDate , customerLoyaltyPoints, address);

                //JOptionPane.showMessageDialog(null, "Adding Succesful!");
                ClearText();
                AutoCustomerID();
                
                customer customer1 = new customer(userID, name, email , role , accountCreationDate , customerLoyaltyPoints, address);
            
                JOptionPane.showMessageDialog(null, customer1.toString(), "Adding Succesful!",  JOptionPane.PLAIN_MESSAGE );
                
            }else {
                JOptionPane.showMessageDialog(null, "Make sure all input fields are properly keyed in");

            }

        }
        catch(Exception e){

            JOptionPane.showMessageDialog(null, "An error occured!");

    }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        if(txtName.getText().contains(":")){
            JOptionPane.showMessageDialog(null, "Invalid symbol ':' used ");
            txtName.setText("");
       } 
    }//GEN-LAST:event_txtNameFocusLost

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        if(txtEmail.getText().contains(":")){
            JOptionPane.showMessageDialog(null, "Invalid symbol ':' used ");
            txtEmail.setText("");
       } 
        
        if(txtEmail.getText().contains("@")){
            lblEmail.setForeground(Color.BLACK);
        } else{
            JOptionPane.showMessageDialog(null, "Invalid Email format");
            txtEmail.setText("");
            lblUserID.setForeground(Color.RED);
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddressFocusLost
        if(txtAddress.getText().contains(":")){
            JOptionPane.showMessageDialog(null, "Invalid symbol ':' used ");
            txtAddress.setText("");
       } 
    }//GEN-LAST:event_txtAddressFocusLost

    
    private void defaultLabelColor(){
            lblUserID.setForeground(Color.BLACK);
            lblName.setForeground(Color.BLACK);
            lblEmail.setForeground(Color.BLACK);
            lblAddress.setForeground(Color.BLACK);
    }
    
    
    private void CheckEmpty(){
    
        if (txtID.getText().equals("")){
           IsEmpty = true;
           defaultLabelColor();
           lblUserID.setForeground(Color.red);
            
        } else if (txtName.getText().equals("")){
           IsEmpty = true;
           defaultLabelColor();
           lblName.setForeground(Color.red);
            
        } else if (txtEmail.getText().equals("")){
           IsEmpty = true;
           defaultLabelColor();
           lblEmail.setForeground(Color.red);
            
        }else if (txtAddress.getText().equals("")){
           IsEmpty = true;
           defaultLabelColor();
           lblAddress.setForeground(Color.red);
        }else{
           IsEmpty = false;
           defaultLabelColor();
        }
       
    }
    
    private void ClearText(){
         
           txtID.setText("");
           txtName.setText("");
           txtEmail.setText("");
           txtAddress.setText("");
           defaultLabelColor();
    }
    
     private void AutoCustomerID(){
        //DecimalFormat dc = new DecimalFormat("000000");
        // This is to ensure the entire method have access to the selectedID array
        String[] selectedID = null;
        try {
            String dir = System.getProperty("user.dir") + "\\src\\DB\\";
            // For debugging purpose only
            // JOptionPane.showMessageDialog(null, bID);
            File customertxt = new File(dir + "customer_t.txt");
            Scanner inputFile;
            try {
                inputFile = new Scanner(customertxt);
                // Read lines from the file until no more are left.
                while (inputFile.hasNext())
                {
                   // Read the next line.
                   String bEntry = inputFile.nextLine();
                   // Split the line by using the delimiter ":" (semicolon) and store into array.
                   selectedID = bEntry.split(":");
                }
                inputFile.close();
                int newCustomerID = Integer.parseInt(selectedID[0]) + 1;
                txtID.setText(String.valueOf(newCustomerID));
                
            } catch (FileNotFoundException ex) {
              
            }
        }
        catch (Exception ex) {
   
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pRegisterCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pRegisterCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pRegisterCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pRegisterCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pRegisterCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
