/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oodjassignment;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Scanner;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static oodjassignment.pLogin.ID;
import static oodjassignment.pLogin.name;
import static oodjassignment.pLogin.userRole;

/**
 *
 * @author User
 */
public class pForgotPassword extends javax.swing.JFrame {

    /**
     * Creates new form pForgotPassword
     */
    public pForgotPassword() {
        AutoID();
        initComponents();
        getContentPane().setBackground(Color.decode("#EBD7C2")); // set background colour
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        txtAccountType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(235, 215, 194));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 33, 71));
        jLabel1.setText("Email");

        txtEmail.setFont(new java.awt.Font("Bahnschrift", 0, 13)); // NOI18N

        btnSend.setBackground(new java.awt.Color(0, 33, 71));
        btnSend.setFont(new java.awt.Font("Bahnschrift", 0, 13)); // NOI18N
        btnSend.setForeground(new java.awt.Color(255, 255, 255));
        btnSend.setText("Send Request");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        txtAccountType.setFont(new java.awt.Font("Bahnschrift", 0, 13)); // NOI18N
        txtAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Center Manager", "Center Technician" }));
        txtAccountType.setToolTipText("");
        txtAccountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAccountTypeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 33, 71));
        jLabel3.setText("Account Type");

        btnBack.setBackground(new java.awt.Color(0, 33, 71));
        btnBack.setFont(new java.awt.Font("Bahnschrift", 0, 13)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnSend)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnSend))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAccountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAccountTypeActionPerformed
   
    }//GEN-LAST:event_txtAccountTypeActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
     
        if (emailValidate() && duplicateValidate()) {
         
             
                int result = JOptionPane.showConfirmDialog(null, "Is this your account? \n"
                        + "ID : " + fID + "\n" 
                        + "Name : " + fName + "\n" 
                        + "Email : " + fEmail + "\n" 
                        , "Forgot Password", JOptionPane.ERROR_MESSAGE); 
                if (result == JOptionPane.YES_OPTION){
                   addForgotPassword();
                   JOptionPane.showMessageDialog(null, "Your request has been sent!");
                   this.setVisible(false);
                   AutoID();
                } else {
                   setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                   txtEmail.setText("");
                }       
    
            
                          
        } else {}
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    
    String fEmail, fName, fID;
    private boolean emailValidate() {
        
        boolean Validated = false;
        
        userRole = txtAccountType.getItemAt(txtAccountType.getSelectedIndex());
    
      
        try {
            if(userRole == "Center Manager"){
                String saveDir = System.getProperty("user.dir") + "\\src\\db\\";
            fEmail = txtEmail.getText();
            File centerManagerText = new File(saveDir + "centerManager_t.txt");
            if (!centerManagerText.exists()){
                centerManagerText.createNewFile();
            }
      
            Scanner inputFile = new Scanner(centerManagerText);
            String[] SelectedID;
            while (inputFile.hasNext())
            {
                
                String lEntry = inputFile.nextLine();
   
                SelectedID = lEntry.split(":");

                if (fEmail.equals(SelectedID[2])) {
                    Validated = true;
                    fID = SelectedID[0];
                    fName = SelectedID[1];
                    fEmail = SelectedID[2];
                }
            }
            inputFile.close();
            }
            
            if(userRole == "Center Technician"){
                String saveDir = System.getProperty("user.dir") + "\\src\\db\\";
            fEmail = txtEmail.getText();
            File centerManagerText = new File(saveDir + "centerTechnician_t.txt");
            if (!centerManagerText.exists()){
                centerManagerText.createNewFile();
            }
      
            Scanner inputFile = new Scanner(centerManagerText);
            String[] SelectedID;
            while (inputFile.hasNext())
            {
                
                String lEntry = inputFile.nextLine();
   
                SelectedID = lEntry.split(":");

                if (fEmail.equals(SelectedID[2])) {
                    Validated = true;
                    name = SelectedID[1];
                    fID = SelectedID[0];
                    fName = SelectedID[1];
                    fEmail = SelectedID[2];
                   
                }
            }
            inputFile.close();
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "An error occured!");

        }
        if(Validated == false){
            JOptionPane.showMessageDialog(null, "Make sure that the email matches the account type.", "Email does not exist in Database!", JOptionPane.ERROR_MESSAGE);
        }
        
        return Validated;
    }
    
    private boolean duplicateValidate() {
        String fDate;
        boolean duplicateValidate = false;
        boolean sameDate = false;
       
        try {
                String saveDir = System.getProperty("user.dir") + "\\src\\db\\";
            fEmail = txtEmail.getText();
            File forgotPasswordText = new File(saveDir + "forgotPassword_t.txt");
            if (!forgotPasswordText.exists()){
                forgotPasswordText.createNewFile();
            }
      
            Scanner inputFile = new Scanner(forgotPasswordText);
            String[] SelectedID;
            while (inputFile.hasNext())
            {
                
                String lEntry = inputFile.nextLine();
   
                SelectedID = lEntry.split(":");

                if (fEmail.equals(SelectedID[4])) {
                    fDate = SelectedID[5];
                    
                    Calendar currentDate = Calendar.getInstance();
                    SimpleDateFormat datef = new SimpleDateFormat("dd/MM/yyyy");

                    creationDate = datef.format(currentDate.getTime());
                    
                    if(fDate.equals(creationDate)){
                      duplicateValidate = false;
                      sameDate = true;
                    } else{
                       duplicateValidate = true;
                    }
                }
            }
            
             if(sameDate == true){
                JOptionPane.showMessageDialog(null, "You have already made a request today!");
            } else{
             duplicateValidate = true;
             }
            inputFile.close();
            
            

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "An error occured!");

        }
        System.out.print(duplicateValidate);
        return duplicateValidate;
    }
    
    String creationDate;
    private void addForgotPassword(){
        
        Calendar currentDate = Calendar.getInstance();
        SimpleDateFormat datef = new SimpleDateFormat("dd/MM/yyyy");
        String status = "False";

        creationDate = datef.format(currentDate.getTime());
 
        
        
        try{
            
           String Filename = "src\\db\\forgotPassword_t.txt";

            // Open the file.
            //Add onto the existing file
            FileWriter fw = new FileWriter(Filename, true);
            PrintWriter outputFile = new PrintWriter(fw);

            //Overide the existing file

                // Write the name to the file.
                outputFile.println(FID + ":" + userRole + ":" + fID + ":" + fName + ":" + fEmail + ":" + creationDate + ":" + status);

                outputFile.close(); // Close the file.
                System.out.println("Data written to the file.");

                //JOptionPane.showMessageDialog(null, "Adding Succesful!");
        }
        catch(IOException e){

            JOptionPane.showMessageDialog(null, "An error occured!");
        }
    
    }
    
    String FID;
     private void AutoID(){
        //DecimalFormat dc = new DecimalFormat("000000");
        // This is to ensure the entire method have access to the selectedID array
        String[] selectedID = null;
        try {
            String dir = System.getProperty("user.dir") + "\\src\\DB\\";
            // For debugging purpose only
            // JOptionPane.showMessageDialog(null, bID);
            File customertxt = new File(dir + "forgotPassword_t.txt");
            Scanner inputFile;
            try {
                inputFile = new Scanner(customertxt);
                // Read lines from the file until no more are left.
                while (inputFile.hasNext())
                {
                   // Read the next line.
                   String bEntry = inputFile.nextLine();
                   // Split the line by using the delimiter ":" (semicolon) and store into array.
                   selectedID = bEntry.split(":");
                }
                inputFile.close();
                int newCustomerID = Integer.parseInt(selectedID[0]) + 1;
                FID = Integer.toString(newCustomerID);
                
                
                
            } catch (FileNotFoundException ex) {
              
            }
        }
        catch (Exception ex) {
   
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> txtAccountType;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables
}
